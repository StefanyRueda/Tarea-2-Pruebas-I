name: CI (Gradle / JUnit)

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]
  workflow_dispatch: {}  # Permite lanzarlo manualmente desde GitHub

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # Opcional: acelerar builds con el action oficial de Gradle
      - name: Gradle Build
        uses: gradle/gradle-build-action@v3
        with:
          arguments: |
            --no-daemon
            clean test
          gradle-version: wrapper

      # Si prefieres ejecutar manualmente:
      # - name: Grant execute permission for gradlew
      #   run: chmod +x gradlew
      # - name: Build & Test
      #   run: ./gradlew --no-daemon clean test

      # Publica reportes de pruebas como artefacto descargable
      - name: Publish JUnit test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      # Publica resultados del Surefire/JUnit XML (para integraciones externas)
      - name: Publish test result XMLs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-xml
          path: build/test-results/test
